/************************************************************************************************
 * ######     #    ######  ### ######  ######  ######   #####
 * #     #   # #   #     #  #  #     # #     # #     # #     #
 * #     #  #   #  #     #  #  #     # #     # #     # #
 * ######  #     # ######   #  #     # ######  ######  #
 * #   #   ####### #        #  #     # #   #   #       #
 * #    #  #     # #        #  #     # #    #  #       #     #
 * #     # #     # #       ### ######  #     # #        #####
 * ${FILE_NAME}
 * Created by RAPIDRPC framework rapidrpc_generator.py
 * Do not modify this file.
 ************************************************************************************************/

#include "rapidrpc/common/log.h"
#include "rapidrpc/common/config.h"
#include "rapidrpc/net/tcp/net_addr.h"
#include "rapidrpc/net/tcp/tcp_server.h"
#include "rapidrpc/net/rpc/dispatcher.h"

#include <google/protobuf/service.h>

int main() {
    rapidrpc::Config::SetGlobalConfig("path/to/config.xml");
    rapidrpc::Logger::InitGlobalLogger();

    rapidrpc::Dispatcher::GetDispatcher()->registerService(std::make_shared<${SERVICE_NAME}>());

    std::shared_ptr<rapidrpc::NetAddr> ipNetAddr = std::make_shared<rapidrpc::IpNetAddr>(
        rapidrpc::Config::GetGlobalConfig()->m_ip, rapidrpc::Config::GetGlobalConfig()->m_port);

    rapidrpc::TcpServer tcpServer(ipNetAddr);
    tcpServer.start();

    // rapidrpc::Logger::GetGlobalLogger()->flushAndStop();
}